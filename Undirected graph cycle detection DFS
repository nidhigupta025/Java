class Solution
{
    public boolean dfs(ArrayList<ArrayList<Integer>> adj, int s, int []vis, int par)
    {
        vis[s]=1;
        
        for(Integer i: adj.get(s))
        {
           if(vis[i]==0)
           {
               if(dfs(adj,i,vis,s))
               return true;
           }
           else if(par!=i)
           return true;
        }
        return false;
    }
    public boolean isCycle(int V, ArrayList<ArrayList<Integer>> adj)
    {
        int[] vis=new int[V];
        Arrays.fill(vis,0);
        for(int i=0;i<V;i++)
        {
            if(vis[i]==0)
            {
                if(dfs(adj,i,vis,-1))
                return true;
            }
        }
        return false;
    }
}
